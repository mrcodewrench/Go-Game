//this is where we are gonna start the unit testing for gogameclasses
//check for how to make it look for equal array values...
describe("boardMatcher", function() {
    it("should return true for exact matching board", function() {
        var testBoard = [   ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
                            
        var testBoard2 = [  ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
        
        expect(logic.boardMatcher(testBoard,testBoard2)).toBe(true);
        
    });
    it("should return true for exact matching board", function() {
        var testBoard = [   ["0","W","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","W","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
                            
        var testBoard2 = [  ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
        
        expect(logic.boardMatcher(testBoard,testBoard2)).toBe(false);
        
    });
    it("should return true for exact matching board", function() {
        var testBoard = [   ["0","W","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","W","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
                            
        var testBoard2 = [  ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","B","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","B","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
        
        expect(logic.boardMatcher(testBoard,testBoard2)).toBe(false);
        
    });
    it("should return true for exact matching board", function() {
        var testBoard = [   ["W","0","0","0","0","0","0","0","0"],
                            ["0","0","B","B","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
                            
        var testBoard2 = [  ["W","0","0","0","0","0","0","0","0"],
                            ["0","0","B","B","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],
                            ["0","0","0","0","0","0","0","0","0"],];
        
        expect(logic.boardMatcher(testBoard,testBoard2)).toBe(true);
        
    });
    
});


describe("placeStone", function() {
   beforeEach(function() {
    logic.tempBoard = [ ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],
                        ["0","0","0","0","0","0","0","0","0"],];
});
    it("should place a black stone at 0,6", function() {
       logic.placeStone(logic.black,0,6);
       expect(logic.tempBoard[6][0]).toEqual("B");
   });
    it("should place a black stone at 2,6", function() {
       logic.placeStone(logic.black,2,6);
       expect(logic.tempBoard[6][2]).toEqual("B");
   });
    it("should place a white stone at 0,0", function() {
       logic.placeStone(logic.white,0,0);
       expect(logic.tempBoard[0][0]).toEqual("W");
   });
    it("should place a white stone at 8,8", function() {
       logic.placeStone(logic.white,8,8);
       expect(logic.tempBoard[8][8]).toEqual("W");
   });
});